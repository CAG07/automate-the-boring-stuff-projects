1. What is []?
Opening and closing square brackets are used for the beginning and end of a list. A list value is inside the brackets.

2. How would you assign the value 'hello' as the third value in a list stored in a variable named spam? (Assume spam contains [2, 4, 6, 8, 10].)
spam[3]

For the following three questions, let’s say spam contains the list ['a', 'b', 'c', 'd'].
3. What does spam[int(int('3' * 2) // 11)] evaluate to?
d

4. What does spam[-1] evaluate to?
d

5. What does spam[:2] evaluate to?
['a', 'b']

For the following three questions, let’s say bacon contains the list [3.14, 'cat', 11, 'cat', True].
6. What does bacon.index('cat') evaluate to?
1

7. What does bacon.append(99) make the list value in bacon look like?
[3.14, 'cat', 11, 'cat', True, 99]

8. What does bacon.remove('cat') make the list value in bacon look like?
[3.14, 11, 'cat', True, 99]

9. What are the operators for list concatenation and list replication?
The + operator combines two lists to create a new list value and the * operator can be used with a list and an integer value to replicate the list.

10. What is the difference between the append() and insert() list methods?
The previous append() method call adds the argument to the end of the list. The insert() method can insert a value at any index in the list.

11. What are two ways to remove values from a list?
The remove() method is passed the value to be removed from the list it is called on.
The del statement is good to use when you know the index of the value you want to remove from the list.
Ex.
>>> del bacon[0]
>>> bacon
[11, 'cat', True, 99]

12. Name a few ways that list values are similar to string values.
List values are similar to string values, where both index the values in order.

13. What is the difference between lists and tuples?
The tuple data type is almost identical to the list data type, except in two ways. First, tuples are typed with parentheses, ( and ), instead of square brackets, [ and ]. But the main way that tuples are different from lists is that tuples, like strings, are immutable. Tuples cannot have their values modified, appended, or removed. Tuples convey that you don't intend for the sequence of values to change.

14. How do you type the tuple value that has just the integer value 42 in it?
If you have only one value in your tuple, you can indicate this by placing a trailing comma after the value inside the parentheses. Otherwise, Python will think you’ve just typed a value inside regular parentheses. The comma is what lets Python know this is a tuple value. (Unlike some other programming languages, it’s fine to have a trailing comma after the last item in a list or tuple in Python.) Enter the following type() function calls into the interactive shell to see the distinction:

>>>> value=((42,))
>>> type((42,))
<class 'tuple'>

15. How can you get the tuple form of a list value? How can you get the list form of a tuple value?
If you want to convert a Python list to a tuple, you can use the tuple() function to pass the full list as an argument, and it will return the tuple data type as an output.
>>> tuple(['cat', 'dog', 5])
('cat', 'dog', 5)

Converting a tuple to a list:
>>> list(('cat', 'dog', 5))
['cat', 'dog', 5]

Converting a tuple to a list is handy if you need a mutable version of a tuple value.

16. Variables that “contain” list values don’t actually contain lists directly. What do they contain instead?
Variables “store” strings and integer values. However, this explanation is a simplification of what Python is actually doing. Technically, variables are storing references to the computer memory locations where the values are stored.

17. What is the difference between copy.copy() and copy.deepcopy()?
copy.copy(), can be used to make a duplicate copy of a mutable value like a list or dictionary, not just a copy of a reference.
>>> import copy
>>> spam = ['A', 'B', 'C', 'D']
>>> id(spam)
2214427949440
>>> cheese=copy.copy(spam)
>>> id(cheese)
2214427798272

If the list you need to copy contains lists, then use the copy.deepcopy() function instead of copy.copy(). The deepcopy() function will copy these inner lists as well.

